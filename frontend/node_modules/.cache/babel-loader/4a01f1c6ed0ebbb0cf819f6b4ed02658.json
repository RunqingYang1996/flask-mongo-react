{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/7.9/frontend/src/components/TitlebarImageList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TitlebarImageList() {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/images') // 确保URL指向Flask服务器\n    .then(response => response.json()).then(data => setImages(data)).catch(error => console.error('Error fetching images:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ImageList, {\n    sx: {\n      width: 500,\n      height: 450\n    },\n    children: images.map((item, index) => /*#__PURE__*/_jsxDEV(ImageListItem, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${item.img}`,\n        alt: item.title,\n        loading: \"lazy\",\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n        title: item.title,\n        subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"by: \", item.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 23\n        }, this),\n        position: \"below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TitlebarImageList, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = TitlebarImageList;\nvar _c;\n$RefreshReg$(_c, \"TitlebarImageList\");","map":{"version":3,"names":["React","useState","useEffect","ImageList","ImageListItem","ImageListItemBar","jsxDEV","_jsxDEV","TitlebarImageList","_s","images","setImages","fetch","then","response","json","data","catch","error","console","sx","width","height","children","map","item","index","src","img","alt","title","loading","style","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","author","position","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/7.9/frontend/src/components/TitlebarImageList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\n\nexport default function TitlebarImageList() {\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/images')  // 确保URL指向Flask服务器\n      .then(response => response.json())\n      .then(data => setImages(data))\n      .catch(error => console.error('Error fetching images:', error));\n  }, []);\n\n  return (\n    <ImageList sx={{ width: 500, height: 450 }}>\n      {images.map((item, index) => (\n        <ImageListItem key={index}>\n          <img\n            src={`data:image/png;base64,${item.img}`}\n            alt={item.title}\n            loading=\"lazy\"\n            style={{ width: '100%', height: 'auto' }}\n          />\n          <ImageListItemBar\n            title={item.title}\n            subtitle={<span>by: {item.author}</span>}\n            position=\"below\"\n          />\n        </ImageListItem>\n      ))}\n    </ImageList>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,kCAAkC,CAAC,CAAE;IAAA,CACxCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACJ,SAAS;IAACiB,EAAE,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAAC,QAAA,EACxCb,MAAM,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBnB,OAAA,CAACH,aAAa;MAAAmB,QAAA,gBACZhB,OAAA;QACEoB,GAAG,EAAE,yBAAyBF,IAAI,CAACG,GAAG,EAAG;QACzCC,GAAG,EAAEJ,IAAI,CAACK,KAAM;QAChBC,OAAO,EAAC,MAAM;QACdC,KAAK,EAAE;UAAEX,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACF7B,OAAA,CAACF,gBAAgB;QACfyB,KAAK,EAAEL,IAAI,CAACK,KAAM;QAClBO,QAAQ,eAAE9B,OAAA;UAAAgB,QAAA,GAAM,MAAI,EAACE,IAAI,CAACa,MAAM;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAE;QACzCG,QAAQ,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA,GAXgBV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYV,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAAC3B,EAAA,CA7BuBD,iBAAiB;AAAAgC,EAAA,GAAjBhC,iBAAiB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}