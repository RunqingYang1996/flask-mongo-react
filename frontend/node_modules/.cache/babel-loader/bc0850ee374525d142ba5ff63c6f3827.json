{"ast":null,"code":"import { getFlippedElementPositionsBeforeUpdate as e, onFlipKeyUpdate as t, utilities as r, constants as n } from \"flip-toolkit\";\nexport { disableFlip, enableFlip, isFlipEnabled, spring } from \"flip-toolkit\";\nimport i, { createContext as o, Component as p, Children as l, cloneElement as a } from \"react\";\nimport \"prop-types\";\nfunction s() {\n  return s = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n      for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n    }\n    return e;\n  }, s.apply(this, arguments);\n}\nfunction c(e, t) {\n  return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {\n    return e.__proto__ = t, e;\n  }, c(e, t);\n}\nfunction d(e, t) {\n  if (null == e) return {};\n  var r,\n    n,\n    i = {},\n    o = Object.keys(e);\n  for (n = 0; n < o.length; n++) t.indexOf(r = o[n]) >= 0 || (i[r] = e[r]);\n  return i;\n}\nvar f = /*#__PURE__*/o({}),\n  u = /*#__PURE__*/o(\"portal\"),\n  h = /*#__PURE__*/function (r) {\n    var n, o;\n    function p() {\n      for (var e, t = arguments.length, n = new Array(t), i = 0; i < t; i++) n[i] = arguments[i];\n      return (e = r.call.apply(r, [this].concat(n)) || this).inProgressAnimations = {}, e.flipCallbacks = {}, e.el = void 0, e;\n    }\n    o = r, (n = p).prototype = Object.create(o.prototype), n.prototype.constructor = n, c(n, o);\n    var l = p.prototype;\n    return l.getSnapshotBeforeUpdate = function (t) {\n      return t.flipKey !== this.props.flipKey && this.el ? e({\n        element: this.el,\n        flipCallbacks: this.flipCallbacks,\n        inProgressAnimations: this.inProgressAnimations,\n        portalKey: this.props.portalKey\n      }) : null;\n    }, l.componentDidUpdate = function (e, r, n) {\n      this.props.flipKey !== e.flipKey && this.el && t({\n        flippedElementPositionsBeforeUpdate: n.flippedElementPositions,\n        cachedOrderedFlipIds: n.cachedOrderedFlipIds,\n        containerEl: this.el,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.props.applyTransformOrigin,\n        spring: this.props.spring,\n        debug: this.props.debug,\n        portalKey: this.props.portalKey,\n        staggerConfig: this.props.staggerConfig,\n        handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n        decisionData: {\n          previous: e.decisionData,\n          current: this.props.decisionData\n        },\n        onComplete: this.props.onComplete,\n        onStart: this.props.onStart\n      });\n    }, l.render = function () {\n      var e = this,\n        t = this.props,\n        r = t.portalKey,\n        n = /*#__PURE__*/i.createElement(f.Provider, {\n          value: this.flipCallbacks\n        }, /*#__PURE__*/i.createElement(t.element, {\n          className: t.className,\n          ref: function (t) {\n            return e.el = t;\n          }\n        }, this.props.children));\n      return r && (n = /*#__PURE__*/i.createElement(u.Provider, {\n        value: r\n      }, n)), n;\n    }, p;\n  }(p);\nh.defaultProps = {\n  applyTransformOrigin: !0,\n  element: \"div\"\n};\nvar m = [\"children\", \"flipId\", \"inverseFlipId\", \"portalKey\"],\n  y = [\"children\", \"flipId\", \"shouldFlip\", \"shouldInvert\", \"onAppear\", \"onStart\", \"onStartImmediate\", \"onComplete\", \"onExit\", \"onSpringUpdate\"],\n  g = function (e) {\n    var t,\n      i = e.children,\n      o = e.flipId,\n      p = e.inverseFlipId,\n      s = e.portalKey,\n      c = d(e, m),\n      f = i,\n      u = function (e) {\n        return \"function\" == typeof e;\n      }(f);\n    if (!u) try {\n      f = l.only(i);\n    } catch (e) {\n      throw new Error(\"Each Flipped component must wrap a single child\");\n    }\n    c.scale || c.translate || c.opacity || r.assign(c, {\n      translate: !0,\n      scale: !0,\n      opacity: !0\n    });\n    var h = ((t = {})[n.DATA_FLIP_CONFIG] = JSON.stringify(c), t);\n    return void 0 !== o ? h[n.DATA_FLIP_ID] = String(o) : p && (h[n.DATA_INVERSE_FLIP_ID] = String(p)), void 0 !== s && (h[n.DATA_PORTAL_KEY] = s), u ? f(h) : /*#__PURE__*/a(f, h);\n  },\n  v = function (e) {\n    var t = e.children,\n      n = e.flipId,\n      o = e.shouldFlip,\n      p = e.shouldInvert,\n      l = e.onAppear,\n      a = e.onStart,\n      c = e.onStartImmediate,\n      h = e.onComplete,\n      m = e.onExit,\n      v = e.onSpringUpdate,\n      I = d(e, y);\n    return t ? I.inverseFlipId ? /*#__PURE__*/i.createElement(g, s({}, I), t) : /*#__PURE__*/i.createElement(u.Consumer, null, function (e) {\n      /*#__PURE__*/return i.createElement(f.Consumer, null, function (d) {\n        return r.isObject(d) && n && (d[n] = {\n          shouldFlip: o,\n          shouldInvert: p,\n          onAppear: l,\n          onStart: a,\n          onStartImmediate: c,\n          onComplete: h,\n          onExit: m,\n          onSpringUpdate: v\n        }), /*#__PURE__*/i.createElement(g, s({\n          flipId: n\n        }, I, {\n          portalKey: e\n        }), t);\n      });\n    }) : null;\n  };\nv.displayName = \"Flipped\";\nvar I = function (e) {\n  var t; /*#__PURE__*/\n  return a(e.children, ((t = {})[n.DATA_EXIT_CONTAINER] = !0, t));\n};\nexport { I as ExitContainer, v as Flipped, h as Flipper };","map":{"version":3,"names":["f","o","u","h","r","n","p","e","t","arguments","length","Array","i","call","apply","concat","inProgressAnimations","flipCallbacks","el","prototype","Object","create","constructor","c","l","getSnapshotBeforeUpdate","flipKey","props","element","portalKey","componentDidUpdate","flippedElementPositionsBeforeUpdate","flippedElementPositions","cachedOrderedFlipIds","containerEl","applyTransformOrigin","spring","debug","staggerConfig","handleEnterUpdateDelete","decisionData","previous","current","onComplete","onStart","render","createElement","Provider","value","className","ref","children","defaultProps","m","y","g","Flipped","flipId","inverseFlipId","s","d","only","Error","scale","translate","opacity","assign","DATA_FLIP_CONFIG","JSON","stringify","DATA_FLIP_ID","String","DATA_INVERSE_FLIP_ID","DATA_PORTAL_KEY","a","v","FlippedWithContext","shouldFlip","shouldInvert","onAppear","onStartImmediate","onExit","onSpringUpdate","I","Consumer","isObject","displayName","ExitContainer","DATA_EXIT_CONTAINER","Flipper"],"sources":["../src/Flipper/context.ts","../src/Flipper/index.tsx","../src/Flipped/index.tsx","../src/ExitContainer/index.tsx"],"sourcesContent":["import { createContext } from 'react'\nimport { FlipCallbacks } from 'flip-toolkit/lib/types'\n\nexport const FlipContext = createContext({} as FlipCallbacks)\nexport const PortalContext = createContext('portal')\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  getFlippedElementPositionsBeforeUpdate,\n  onFlipKeyUpdate\n} from 'flip-toolkit'\nimport {\n  FlipperProps,\n  InProgressAnimations,\n  FlipCallbacks\n} from 'flip-toolkit/lib/types'\nimport { FlippedElementPositionsBeforeUpdateReturnVals } from 'flip-toolkit/lib/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/types'\nimport { FlipContext, PortalContext } from './context'\n\nclass Flipper extends Component<FlipperProps> {\n  static defaultProps = {\n    applyTransformOrigin: true,\n    element: 'div'\n  }\n\n  private inProgressAnimations: InProgressAnimations = {}\n  private flipCallbacks: FlipCallbacks = {}\n  private el?: HTMLElement = undefined\n\n  getSnapshotBeforeUpdate(prevProps: FlipperProps) {\n    if (prevProps.flipKey !== this.props.flipKey && this.el) {\n      return getFlippedElementPositionsBeforeUpdate({\n        element: this.el,\n        // if onExit callbacks exist here, we'll cache the DOM node\n        flipCallbacks: this.flipCallbacks,\n        inProgressAnimations: this.inProgressAnimations,\n        portalKey: this.props.portalKey\n      })\n    }\n    return null\n  }\n\n  componentDidUpdate(\n    prevProps: FlipperProps,\n    _prevState: any,\n    cachedData: FlippedElementPositionsBeforeUpdateReturnVals\n  ) {\n    if (this.props.flipKey !== prevProps.flipKey && this.el) {\n      onFlipKeyUpdate({\n        flippedElementPositionsBeforeUpdate: cachedData.flippedElementPositions,\n        cachedOrderedFlipIds: cachedData.cachedOrderedFlipIds,\n        containerEl: this.el,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.props.applyTransformOrigin,\n        spring: this.props.spring,\n        debug: this.props.debug,\n        portalKey: this.props.portalKey,\n        staggerConfig: this.props.staggerConfig,\n        handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n        decisionData: {\n          previous: prevProps.decisionData,\n          current: this.props.decisionData\n        },\n        onComplete: this.props.onComplete,\n        onStart: this.props.onStart\n      })\n    }\n  }\n\n  public render() {\n    const { element, className, portalKey } = this.props\n    const Element = element\n\n    let flipperMarkup = (\n      <FlipContext.Provider value={this.flipCallbacks}>\n        {/*\n        // @ts-ignore */}\n        <Element\n          className={className}\n          ref={(el: HTMLElement) => (this.el = el)}\n        >\n          {this.props.children}\n        </Element>\n      </FlipContext.Provider>\n    )\n\n    if (portalKey) {\n      flipperMarkup = (\n        <PortalContext.Provider value={portalKey}>\n          {flipperMarkup}\n        </PortalContext.Provider>\n      )\n    }\n\n    return flipperMarkup\n  }\n}\n// @ts-ignore\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  Flipper.propTypes = {\n    flipKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.bool\n    ]),\n    children: PropTypes.node.isRequired,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    applyTransformOrigin: PropTypes.bool,\n    debug: PropTypes.bool,\n    element: PropTypes.string,\n    className: PropTypes.string,\n    portalKey: PropTypes.string,\n    staggerConfig: PropTypes.object,\n    decisionData: PropTypes.any,\n    handleEnterUpdateDelete: PropTypes.func,\n    onComplete: PropTypes.func,\n    onStart: PropTypes.func\n  }\n}\n\nexport default Flipper\n","import React, {\n  FunctionComponent,\n  Children,\n  cloneElement,\n  ReactElement\n} from 'react'\nimport PropTypes from 'prop-types'\nimport { utilities, constants } from 'flip-toolkit'\nimport { FlippedProps, SerializableFlippedProps } from 'flip-toolkit/lib/types'\nimport { FlipContext, PortalContext } from '../Flipper/context'\n\nfunction isFunction(child: any): child is Function {\n  return typeof child === 'function'\n}\n\n// This wrapper creates child components for the main Flipper component\nexport const Flipped: FunctionComponent<SerializableFlippedProps> = ({\n  children,\n  flipId,\n  inverseFlipId,\n  portalKey,\n  ...rest\n}) => {\n  let child = children\n  const isFunctionAsChildren = isFunction(child)\n\n  if (!isFunctionAsChildren) {\n    try {\n      child = Children.only(children)\n    } catch (e) {\n      throw new Error('Each Flipped component must wrap a single child')\n    }\n  }\n\n  // if nothing is being animated, assume everything is being animated\n  if (!rest.scale && !rest.translate && !rest.opacity) {\n    utilities.assign(rest, {\n      translate: true,\n      scale: true,\n      opacity: true\n    })\n  }\n\n  const dataAttributes: Record<string, string | undefined> = {\n    [constants.DATA_FLIP_CONFIG]: JSON.stringify(rest)\n  }\n\n  if (flipId !== undefined)\n    dataAttributes[constants.DATA_FLIP_ID] = String(flipId)\n  else if (inverseFlipId)\n    dataAttributes[constants.DATA_INVERSE_FLIP_ID] = String(inverseFlipId)\n  if (portalKey !== undefined) {\n    dataAttributes[constants.DATA_PORTAL_KEY] = portalKey\n  }\n  if (isFunctionAsChildren) {\n    return (child as Function)(dataAttributes)\n  }\n  return cloneElement(child as ReactElement<any>, dataAttributes)\n}\n// @ts-ignore\nexport const FlippedWithContext: FunctionComponent<FlippedProps> = ({\n  children,\n  flipId,\n  shouldFlip,\n  shouldInvert,\n  onAppear,\n  onStart,\n  onStartImmediate,\n  onComplete,\n  onExit,\n  onSpringUpdate,\n  ...rest\n}) => {\n  if (!children) {\n    return null\n  }\n  if (rest.inverseFlipId) {\n    return <Flipped {...rest}>{children}</Flipped>\n  }\n\n  return (\n    <PortalContext.Consumer>\n      {portalKey => (\n        <FlipContext.Consumer>\n          {data => {\n            // if there is no surrounding Flipper component,\n            // we don't want to throw an error, so check\n            // that data exists and is not the default string\n            if (utilities.isObject(data) && flipId) {\n              data[flipId] = {\n                shouldFlip,\n                shouldInvert,\n                onAppear,\n                onStart,\n                onStartImmediate,\n                onComplete,\n                onExit,\n                onSpringUpdate\n              }\n            }\n            return (\n              <Flipped flipId={flipId} {...rest} portalKey={portalKey}>\n                {children}\n              </Flipped>\n            )\n          }}\n        </FlipContext.Consumer>\n      )}\n    </PortalContext.Consumer>\n  )\n}\nif (process.env.NODE_ENV !== 'production') {\n  FlippedWithContext.propTypes = {\n    // @ts-expect-error\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    inverseFlipId: PropTypes.string,\n    flipId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    opacity: PropTypes.bool,\n    translate: PropTypes.bool,\n    scale: PropTypes.bool,\n    transformOrigin: PropTypes.string,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onStart: PropTypes.func,\n    onStartImmediate: PropTypes.func,\n    onComplete: PropTypes.func,\n    onAppear: PropTypes.func,\n    onSpringUpdate: PropTypes.func,\n    shouldFlip: PropTypes.func,\n    shouldInvert: PropTypes.func,\n    onExit: PropTypes.func,\n    portalKey: PropTypes.string,\n    stagger: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  }\n}\n\nFlippedWithContext.displayName = 'Flipped'\n\nexport default FlippedWithContext\n","import { cloneElement, ReactElement, ReactNode } from 'react'\nimport { constants } from 'flip-toolkit'\n\nconst ExitContainer = ({ children }: { children: ReactNode }) => {\n  return cloneElement(children as ReactElement<any>, {\n    [constants.DATA_EXIT_CONTAINER]: true\n  })\n}\n\nexport default ExitContainer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}